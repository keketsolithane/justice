{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lithanekeketso\\\\Desktop\\\\Admin_Portatal\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { createClient } from '@supabase/supabase-js';\n\n// Replace these with your Supabase project info\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SUPABASE_URL = 'https://vhztoaoderjbeientrtn.supabase.co';\nconst SUPABASE_ANON_KEY = 'sb_publishable_1a9vPsiBaUTqk5diLkpLQA_AWVa3J3n';\nconst supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\nfunction Register() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('admin');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n\n    // Check if username already exists\n    const {\n      data: existingUser,\n      error: fetchError\n    } = await supabase.from('users').select('id').eq('username', username).single();\n    if (fetchError && fetchError.code !== 'PGRST116') {\n      // PGRST116 = no rows found (which is ok)\n      setError('Error checking username: ' + fetchError.message);\n      return;\n    }\n    if (existingUser) {\n      setError('Username already exists');\n      return;\n    }\n\n    // Insert new user\n    const {\n      data,\n      error: insertError\n    } = await supabase.from('users').insert([{\n      username,\n      password,\n      role\n    }]);\n    if (insertError) {\n      setError('Registration failed: ' + insertError.message);\n      return;\n    }\n    alert('Registration successful. Please login.');\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true,\n        minLength: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        minLength: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: role,\n        onChange: e => setRole(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"admin\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"user\",\n          children: \"User (no access)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"LYeIOZ8P81t9ZzRf2bGJSTRtNzo=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","createClient","jsxDEV","_jsxDEV","SUPABASE_URL","SUPABASE_ANON_KEY","supabase","Register","_s","username","setUsername","password","setPassword","role","setRole","error","setError","navigate","handleSubmit","e","preventDefault","data","existingUser","fetchError","from","select","eq","single","code","message","insertError","insert","alert","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","minLength","_c","$RefreshReg$"],"sources":["C:/Users/Lithanekeketso/Desktop/Admin_Portatal/src/Home.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { createClient } from '@supabase/supabase-js';\n\n// Replace these with your Supabase project info\nconst SUPABASE_URL = 'https://vhztoaoderjbeientrtn.supabase.co';\nconst SUPABASE_ANON_KEY = 'sb_publishable_1a9vPsiBaUTqk5diLkpLQA_AWVa3J3n';\n\nconst supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\n\nfunction Register() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('admin');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    // Check if username already exists\n    const { data: existingUser, error: fetchError } = await supabase\n      .from('users')\n      .select('id')\n      .eq('username', username)\n      .single();\n\n    if (fetchError && fetchError.code !== 'PGRST116') { // PGRST116 = no rows found (which is ok)\n      setError('Error checking username: ' + fetchError.message);\n      return;\n    }\n    if (existingUser) {\n      setError('Username already exists');\n      return;\n    }\n\n    // Insert new user\n    const { data, error: insertError } = await supabase\n      .from('users')\n      .insert([{ username, password, role }]);\n\n    if (insertError) {\n      setError('Registration failed: ' + insertError.message);\n      return;\n    }\n\n    alert('Registration successful. Please login.');\n    navigate('/login');\n  };\n\n  return (\n    <div className=\"container register-container\">\n      <form onSubmit={handleSubmit} className=\"form-box\">\n        <h2>Register</h2>\n        {error && <p className=\"error\">{error}</p>}\n        <label>Username</label>\n        <input\n          type=\"text\"\n          value={username}\n          onChange={e => setUsername(e.target.value)}\n          required\n          minLength={3}\n        />\n        <label>Password</label>\n        <input\n          type=\"password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          required\n          minLength={4}\n        />\n        <label>Role</label>\n        <select value={role} onChange={e => setRole(e.target.value)}>\n          <option value=\"admin\">Admin</option>\n          <option value=\"user\">User (no access)</option>\n        </select>\n        <button type=\"submit\">Register</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}