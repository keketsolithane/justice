{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{createClient}from'@supabase/supabase-js';// Replace these with your Supabase project info\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SUPABASE_URL='https://vhztoaoderjbeientrtn.supabase.co';const SUPABASE_ANON_KEY='sb_publishable_1a9vPsiBaUTqk5diLkpLQA_AWVa3J3n';const supabase=createClient(SUPABASE_URL,SUPABASE_ANON_KEY);function Register(){const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[role,setRole]=useState('admin');const[error,setError]=useState('');const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();setError('');// Check if username already exists\nconst{data:existingUser,error:fetchError}=await supabase.from('users').select('id').eq('username',username).single();if(fetchError&&fetchError.code!=='PGRST116'){// PGRST116 = no rows found (which is ok)\nsetError('Error checking username: '+fetchError.message);return;}if(existingUser){setError('Username already exists');return;}// Insert new user\nconst{data,error:insertError}=await supabase.from('users').insert([{username,password,role}]);if(insertError){setError('Registration failed: '+insertError.message);return;}alert('Registration successful. Please login.');navigate('/login');};return/*#__PURE__*/_jsx(\"div\",{className:\"container register-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"form-box\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Register\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),/*#__PURE__*/_jsx(\"label\",{children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:e=>setUsername(e.target.value),required:true,minLength:3}),/*#__PURE__*/_jsx(\"label\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true,minLength:4}),/*#__PURE__*/_jsx(\"label\",{children:\"Role\"}),/*#__PURE__*/_jsxs(\"select\",{value:role,onChange:e=>setRole(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"admin\",children:\"Admin\"}),/*#__PURE__*/_jsx(\"option\",{value:\"user\",children:\"User (no access)\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Register\"})]})});}export default Register;","map":{"version":3,"names":["React","useState","useNavigate","createClient","jsx","_jsx","jsxs","_jsxs","SUPABASE_URL","SUPABASE_ANON_KEY","supabase","Register","username","setUsername","password","setPassword","role","setRole","error","setError","navigate","handleSubmit","e","preventDefault","data","existingUser","fetchError","from","select","eq","single","code","message","insertError","insert","alert","className","children","onSubmit","type","value","onChange","target","required","minLength"],"sources":["C:/Users/Lithanekeketso/Desktop/Admin_Portatal/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { createClient } from '@supabase/supabase-js';\n\n// Replace these with your Supabase project info\nconst SUPABASE_URL = 'https://vhztoaoderjbeientrtn.supabase.co';\nconst SUPABASE_ANON_KEY = 'sb_publishable_1a9vPsiBaUTqk5diLkpLQA_AWVa3J3n';\n\nconst supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\n\nfunction Register() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('admin');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    // Check if username already exists\n    const { data: existingUser, error: fetchError } = await supabase\n      .from('users')\n      .select('id')\n      .eq('username', username)\n      .single();\n\n    if (fetchError && fetchError.code !== 'PGRST116') { // PGRST116 = no rows found (which is ok)\n      setError('Error checking username: ' + fetchError.message);\n      return;\n    }\n    if (existingUser) {\n      setError('Username already exists');\n      return;\n    }\n\n    // Insert new user\n    const { data, error: insertError } = await supabase\n      .from('users')\n      .insert([{ username, password, role }]);\n\n    if (insertError) {\n      setError('Registration failed: ' + insertError.message);\n      return;\n    }\n\n    alert('Registration successful. Please login.');\n    navigate('/login');\n  };\n\n  return (\n    <div className=\"container register-container\">\n      <form onSubmit={handleSubmit} className=\"form-box\">\n        <h2>Register</h2>\n        {error && <p className=\"error\">{error}</p>}\n        <label>Username</label>\n        <input\n          type=\"text\"\n          value={username}\n          onChange={e => setUsername(e.target.value)}\n          required\n          minLength={3}\n        />\n        <label>Password</label>\n        <input\n          type=\"password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          required\n          minLength={4}\n        />\n        <label>Role</label>\n        <select value={role} onChange={e => setRole(e.target.value)}>\n          <option value=\"admin\">Admin</option>\n          <option value=\"user\">User (no access)</option>\n        </select>\n        <button type=\"submit\">Register</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}